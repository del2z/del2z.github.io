<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Utils on 小小的梦想</title>
    <link>https://del2z.github.io/util/</link>
    <description>Recent content in Utils on 小小的梦想</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	<atom:link href="https://del2z.github.io/util/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://del2z.github.io/util/conda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://del2z.github.io/util/conda/</guid>
      <description>Conda入门 创建环境 conda create python=3.6.8 -p /path/to/py3_venv   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://del2z.github.io/util/cuda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://del2z.github.io/util/cuda/</guid>
      <description>GPU环境安装 深度学习模型的应用和部署环境主要是Linux服务器的GPU上，工业界最常用的Linux服务器操作系统是CentOS，主要的GPU有NVIDIA的Titan V、Tesla P40、Tesla V100等类型。 显卡驱动、CUDA、Tensorflow和Pytorch的安装都是在CentOS环境下进行。
NVIDIA驱动安装 NVIDIA显卡驱动、CUDA工具包、Tensorflow之间有支持版本的限制，三者之间的版本依赖关系如下。
   Linux Driver CUDA Tensorflow     &amp;gt;= 418.39 10.1 (10.1.105)    &amp;gt;= 410.48 10.0 (10.0.130)    &amp;gt;= 396.26 9.2 (9.2.88)    &amp;gt;= 390.46 9.1 (9.1.85)    &amp;gt;= 384.81 9.0 (9.0.76)    &amp;gt;= 375.26 8.0 (8.0.61 GA2)    &amp;gt;= 367.48 8.0 (8.0.44)     注意：下载安装包之前，需要先确定显卡、CUDA、Tensorflow的版本，然后执行后面的步骤。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://del2z.github.io/util/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://del2z.github.io/util/linux/</guid>
      <description>Linux常用命令    功能 命令 选项 用例     文本检索 grep -r/-R 递归检索子文件夹的文件 -n 显示行号 grep -rn &#39;centos&#39; .   文本排序 sort -t 分隔符 -k 排序字段编号 -u 不打印重复记录 -n 按数值排序字段 -r 按逆序排序 sort -t$&#39;\t&#39; -k1n -k2nr file   字段分割 cut -d 分隔符 -f 打印字段编号 -b 打印字节编号 -c 打印字符编号 cut -d$&#39;\t&#39; -f2-4 infile &amp;gt; outfile   文件查看 cat -v 显示控制、删除及非ASCII字符 -e 行尾显示$ -t 制表符显示为^I cat -vet somefile   ^ head -n K或-K 显示文件头部K行，默认为10 head -5 somefile   ^ tail -n K或-K 显示文件尾部K行，默认为10 -f 跟踪显示输出 tail -5 somefile   文件编码 iconv -f 源文件编码 -t 目标文件编码 -o 输出文件 iconv -f gb18030 -t utf-8 -o tofile fromfile   远程登录 ssh -P xxx 连接端口号 ssh -P 3022 root@192.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://del2z.github.io/util/macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://del2z.github.io/util/macos/</guid>
      <description>Mac实用技巧 系统完整性保护 系统完整性保护（System Integrity Protection）默认是开启的，从而限制用户对/bin、/sbin、/System、/usr/sbin等目录的写操作。 通过如下步骤可以开启/关闭系统完整性保护。
 重启系统，开机启动时按下Command + R，Mac进入安全模式。 从Utilities &amp;gt; Terminal打开终端，csrutil status产看系统完整性保护的状态。 csrutil enable开启系统完整性保护；csrutil disable关闭系统完整性保护。 重启系统，新的系统完整性保护设置生效。  剪贴板 在MacOS中，有一些非常有用的终端命令，可以极大地提高工作效率。
 pbcopy，将内容拷贝到剪贴板，如cat some.txt | pbcopy。 pbpaste，将剪贴板内容粘贴到文件，如pbpaste &amp;gt; some.txt。  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://del2z.github.io/util/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://del2z.github.io/util/vim/</guid>
      <description>Vim入门指导 Vim是当前最流行的编辑器之一，从初版发布以来的近30年里，一直占据着主流编辑器的一席之地。尽管Vim的学习曲线很陡峭，但它独有的特性却始终吸引着一代代的程序员。在追求捷径和爆发式成功的当下环境中，Vim所代表的沉淀与厚重更显难能可贵。本篇就简单揭示Vim瑰丽世界的一角，以供品鉴。
常用模式 Vim常用的模式有三种，Normal、Insert、Visual、Command模式等。四种模式有不同的进入方法，如下表所示。
    操作     Normal =&amp;gt; Insert i 光标处插入 I 当前行第一个非空字符前插入 a 光标后插入 A 当前行行尾插入 o 在当前行之后开启新行插入 O 在当前行之前开启新行插入   Insert =&amp;gt; Normal &amp;lt;Esc&amp;gt;或&amp;lt;C-c&amp;gt;   Normal =&amp;gt; Visual v 进入Visual模式，从光标处开始选择 &amp;lt;S-v&amp;gt; 进入行Visual模式，从光标所处的行开始选择 &amp;lt;C-v&amp;gt; 进入列Visual模式，从光标所处的列开始选择   Visual =&amp;gt; Normal &amp;lt;Esc&amp;gt;或&amp;lt;C-c&amp;gt;   Visual + Edit ;normal &amp;lt;operation&amp;gt;&amp;lt;motion&amp;gt;   Normal =&amp;gt; Command :&amp;lt;command&amp;gt;   Command =&amp;gt; Normal &amp;lt;Esc&amp;gt;或&amp;lt;C-c&amp;gt;    基本操作 操作指令 Vim在Normal模式下的命令通常是&amp;lt;operation&amp;gt;&amp;lt;motion&amp;gt;形式，&amp;lt;operation&amp;gt;定义一个操作指令，&amp;lt;motion&amp;gt;定义一个动作指令。 操作指令、修改、复制、粘贴等，动作指令一般是上下左右、前进、后退等光标移动的指令。</description>
    </item>
    
  </channel>
</rss>